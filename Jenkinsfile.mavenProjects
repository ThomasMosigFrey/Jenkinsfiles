pipeline {
    agent any

    triggers { pollSCM('H/5 * * * *') }

    tools {
        maven 'maven3'
    }

    options {
        retry(3)
        buildDiscarder logRotator(artifactDaysToKeepStr: '2', artifactNumToKeepStr: '3', daysToKeepStr: '2', numToKeepStr: '3')
        lock(quantity: 3, resource: 'ThisProduct', resourceSelectStrategy: 'sequential')
        timeout(activity: true, time: 30)
    }

    stages {
        stage ('checkouts') {
            steps {
                checkout scmGit(branches: [[name: "${params.Branch}" ]], extensions: [], userRemoteConfigs: [[credentialsId: '31e84b3b-289f-49b3-a4ac-c96c8d504138', url: "${params.Project}" ]])
            }
        }
        stage('Compile/Test') {
            steps {
                sh 'mvn clean test'
                echo "archive artifacts"
                echo "prepare unit test results"
            }
        }
        stage('Check code quality') {
            steps {
                sh 'call sonarqube'
            }
        }
        stage('Save binary artifacts') {
            steps {
                withMaven(globalMavenSettingsConfig: '5a405c4e-b656-41ce-903a-b7e1d1909c7b', jdk: 'oracle_jdk_8', maven: 'maven3', mavenSettingsConfig: '', traceability: true) {
                    sh 'mvn deploy'
                }
            }
        }
    }
    post { 
        success { 
            echo 'Super! successfully done!!!'
        }
    }
}
